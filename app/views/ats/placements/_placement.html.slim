ruby:
  tooltip_text =
    StringIO.open do |s|
      s << "Disqualify reason: #{placement.disqualify_reason.title} <br>" if placement.disqualified?
      s << t("core.last_activity_time",
             time: short_time_ago_in_words(placement.last_modification_event.performed_at))
      sanitize(s.string)
    end

.placement-partial.mb-2 id=dom_id(placement)
  .row
    .col.align-self-center
      .row.g-0
        - if allowed_to?(:show?, placement.position, with: ATS::PositionPolicy)
          .col-auto.me-1
            = link_to tab_ats_position_path(placement.position.id, :pipeline)
              = position_html_status_circle(placement.position)
        .col
          ruby:
            placement_class =
              if placement.reserved?
                "font-italic"
              elsif placement.disqualified?
                "text-decoration-line-through"
              end
          span class=placement_class
            - if allowed_to?(:show?, placement.position, with: ATS::PositionPolicy)
              = link_to placement.position.name, tab_ats_position_path(placement.position.id, :info)
            - else
              = placement.position.name
    .col-auto
      span.font-italic.me-2 data-bs-toggle="tooltip" data-bs-title=tooltip_text data-bs-html="true"
        = placement.position_stage.name

      - if allowed_to?(:change_stage?, placement, with: ATS::PlacementPolicy)
        .btn-group.placement-buttons
          - if placement.qualified? && !placement.hired?
            .btn-group
              = render "ats/placements/change_stage_buttons", placement:

          .btn-group
            = render "ats/placements/disrequalify_buttons", placement:

          .btn-group
            ruby:
              interview_tooltips = []
              interview_tooltips << "Candidate is disqualified" unless placement.qualified?
              interview_tooltips << "Candidate is hired" if placement.hired?
              interview_tooltips << "Candidate has no recruiter" if placement.candidate.recruiter.blank?
              interview_tooltips << "Candidate has no emails" if placement.candidate.emails.none?

              buttons_visibility =
                placement.qualified? ||
                interview_tooltips.empty?

            - if buttons_visibility
              span aria-expanded="false" aria-haspopup="true" data-bs-toggle="dropdown" type="button"
                = render IconButtonComponent.new( \
                           :dots,
                           size: :tiny,
                           class: "placement-dropdown-toggle placement-button",
                           data: { bs_toggle: :tooltip, bs_title: "More", bs_placement: :bottom },
                         )
              ul.dropdown-menu.dropdown-menu-end
                - if allowed_to?(:change_stage?, placement, with: ATS::PlacementPolicy) && placement.prev_stage.present?
                  li =< render "ats/placements/change_stage_buttons",
                               placement:,
                               direction: :backward
                - if placement.qualified?
                  li =< form_with url: change_status_ats_placement_path(placement)
                       = render ButtonComponent.new( \
                                  variant: :custom,
                                  class: "dropdown-item",
                                  flex_content_position: :start,
                                  name: :status,
                                  value: :reserved,
                                ) do |c|
                         - c.with_icon(:clock, size: c.size, position: :left)
                         | Reserve

                - if allowed_to?(:destroy?, placement, with: ATS::PlacementPolicy)
                  li =< form_with url: ats_placement_path(placement.id),
                                  method: :delete
                       = render ButtonComponent.new( \
                                  variant: :custom,
                                  class: "dropdown-item",
                                  flex_content_position: :start,
                                  data: { toggle: "ats-confirmation",
                                          title: "Delete position from candidate?",
                                          btn_cancel_label: "Cancel",
                                          btn_ok_label: "Delete",
                                          btn_ok_class: "btn btn-danger btn-small" },
                                ) do |c|
                         - c.with_icon(:trash, size: c.size, position: :left)
                         | Remove

            - else
              span [aria-expanded="false" aria-haspopup="true" data-bs-title="No items in menu"
                    data-bs-toggle="tooltip" data-bs-placement="left"]
                = render IconButtonComponent.new( \
                           :dots,
                           size: :tiny,
                           disabled: true,
                           class: "placement-dropdown-toggle placement-button",
                         )
