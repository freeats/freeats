ruby:
  names_query = @candidate.names.map { "\"#{_1}\"" }.join(" OR ")
  duplicates_count = @candidate.possible_duplicates_count
  red_name = @candidate.blacklisted?

- candidate_name = capture
    h1.mb-0.text-break.gap-2.hstack class=("text-danger" if red_name)
      - if red_name
        = render IconComponent.new(:ban, size: :large)
      = @candidate.full_name
      - if duplicates_count.positive?
        = render IconButtonComponent.new( \
                   :cards,
                   size: :large,
                   icon_type: :filled,
                   variant: :ghost,
                   class: "p-0",
                   href: { url: ats_candidates_path(ats_candidates_grid: { \
                                                      candidate: names_query,
                                                      include_blacklisted: true,
                                                    }) },
                   data: { turbo_frame: "_top",
                           bs_toggle: :tooltip,
                           bs_title: "#{pluralize(duplicates_count, 'other candidate profile')} with this name found",
                           bs_placement: :right })

= turbo_frame_tag :turbo_header_section
  .row.gx-3
    .col-auto.d-flex.mb-3
      / AVATAR
      = render "ats/candidates/avatar_image", candidate: @candidate

    / ACTIONS
    .col-auto.d-flex.flex-row.ms-auto.order-md-last.gap-2.mb-2
      = render "ats/candidates/action_buttons", profile: @candidate
      - if allowed_to?(:edit_header?)
        div
          .hstack.gap-2
            = render IconButtonComponent.new( \
                       :pencil,
                       variant: :ghost,
                       href: { url: edit_header_ats_candidate_path(@candidate) },
                       data: { bs_toggle: "tooltip", bs_title: t("core.edit_button") },
                     )

    / BASE INFO
    .col-12.col-md
      = candidate_name

      - if @candidate.candidate_alternative_names.present?
        .font-small.mt-1 = @candidate.candidate_alternative_names.pluck(:name).join(", ")

      - if @candidate.headline.present? || @candidate.company.present?
        ruby:
          candidate_headline = @candidate.headline
          company = @candidate.company
          # That regexp is for fixing a long solid headline.
          text_to_clamp = candidate_turn_array_to_string_with_line_breakers([candidate_headline, company])
        .mt-2.font-body = text_to_clamp

      - if @candidate.location_id?
        .mt-2.font-body
          = @candidate.location.short_name

      / ACTIVITY
      .row.font-small.text-secondary.mt-3.mb-2.gx-2
        .col-auto.text-nowrap.hstack [data-bs-toggle="tooltip"
            title=t("core.added_on_time", time: @created_at.to_fs(:datetime_full))]
          = render IconComponent.new(:square_plus, size: :tiny)
          | &nbsp;
          = t("core.created_time", time: short_time_ago_in_words(@created_at))
        .col-auto.text-nowrap.hstack [data-bs-toggle="tooltip"
            title=t("core.last_activity_on", time: @candidate.last_activity_at.to_fs(:datetime_full))]
          = render IconComponent.new(:hourglass_empty, size: :tiny)
          | &nbsp;
          = t("core.last_activity", time: short_time_ago_in_words(@candidate.last_activity_at))
