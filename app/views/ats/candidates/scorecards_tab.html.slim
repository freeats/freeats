= render "ats/candidates/profile" do
  .accordion.mt-3 id="scorecards-accordion"
    - @placements_with_scorecard_templates.each.with_index do |placement, index|
      - position = placement.position
      - unique_id = "placement-#{placement.id}"
      .accordion-item
        .accordion-header
          .accordion-button [type="button" data-bs-toggle="collapse" data-bs-target="##{unique_id}"
              aria-expanded="#{index.zero?}" aria-controls=unique_id
              class=("collapsed" if index.positive?)]
            .row.w-100.me-1
              .col-md
                = position.name
              .col-md-auto.text-md-end.text-secondary.text-truncate
                = "#{placement.status.humanize}/#{placement.stage} " \
                  "(#{placement.added_event.performed_at.to_fs(:date)})"
        .accordion-collapse.collapse [data-bs-parent="#scorecards-accordion" id=unique_id
          class=("show" if index.zero?)]
          .accordion-body.vstack.gap-3
            - visible_stages(placement).each do |stage|
              - stage_name_to_display = stage.deleted ? "#{stage.name}<br>(deleted)" : stage.name
              = render LabeledComponent.new do |c|
                - c.with_label(sanitize(stage_name_to_display))
                - visible_scorecards = placement.scorecards.filter { _1.position_stage_id == stage.id }
                = render "stage_scorecards", stage:, scorecards: visible_scorecards, placement_id: placement.id
