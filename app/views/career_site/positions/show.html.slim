- content_for :title do
  = t("career_site.positions.position_title", company_name: @current_tenant.name, position_name: @position.name)

.row
  span#back_on_all_positions
    = link_to career_site_positions_path do
      = render IconComponent.new(:chevron_left, size: :medium, class: "me-1")
      = t("career_site.positions.all_positions", company_name: @current_tenant.name)
.row#position_heading.mt-3.gap-3.justify-content-between
  .col-12.col-md-10
    .col
      h1 = @position.name
    - if @position.open?
      .col
        = @position.location&.short_name
  - if @position.open?
    .col-12.col-md-auto.align-items-center.d-flex
      = render ButtonLinkComponent.new( \
          "#full_name",
          size: :medium, class: "w-100" \
        ).with_content(t("career_site.positions.apply_button"))
- unless @position.open?
  .row#closed_section.mt-2
    .col-12.mb-3
      = t("career_site.positions.closed_alert")
    .col-12.col-md-auto
      = render ButtonLinkComponent.new( \
          career_site_positions_path, size: :medium, class: "w-100" \
        ).with_content(t("career_site.positions.view_all"))
- if @position.open?
  - if @position.description.body.present?
    .row#position_description.mt-4
      h2.mb-3 = t("career_site.positions.description")
      .text-break
        = sanitize @position.description.body&.to_html
  hr.my-4
  #application_form
    h2.mb-3 = t("career_site.positions.apply_position")
    = form_with url: apply_career_site_position_path( \
                       tenant_slug: @current_tenant.slug,
                       position_id: @position.id),
                       id: "form-with-recaptcha",
                       data: { controller: "recaptcha-v3" },
                       class: "d-flex flex-column gap-2 needs-validation" do |form|
      #turbo_recaptcha.position-absolute.col
      .col
        = render TextInputComponent.new( \
            form,
            method: :full_name,
            required: true,
            size: :medium,
            placeholder: "Full name" \
          )
        .invalid-feedback
          = t("career_site.positions.invalid_full_name_error")
      .col
        = render TextInputComponent.new( \
            form,
            method: :email,
            required: true,
            type: :email,
            size: :medium,
            pattern: EmailRegexp::HTML_EMAIL_PATTERN,
            placeholder: "Email" \
          )
        .invalid-feedback
          = t("career_site.positions.invalid_email_error")
      .col
        = form.file_field :file, class: "form-control", id: "formFile", type: "file",
                                required: true, accept: ".pdf,.doc,.docx,.odt,.rtf"
        .invalid-feedback
          = t("career_site.positions.invalid_file_error")
      = hidden_field_tag :recaptcha_v3_score
      .d-flex.mt-2
        = render ButtonComponent.new( \
                   variant: :primary,
                   size: :medium,
                   class: "flex-grow-1 flex-md-grow-0" \
                 )
          = t("career_site.positions.submit_application")
      .mt-2.font-small.text-secondary#recaptcha_message = t("recaptcha.privacy_message_html")
